cmake_minimum_required(VERSION 3.5)
project(ORB_SLAM3)

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE Release)
ENDIF()

if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 17)
endif()

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -Wall   -O3")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall   -O3")
set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -march=native")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -march=native")

find_package(Eigen3 3.1.0 REQUIRED)
find_package(realsense2 REQUIRED)
find_package(yaml-cpp REQUIRED)
find_package(OpenCV 4.2 REQUIRED)
find_package(Pangolin REQUIRED)
find_package(Boost REQUIRED COMPONENTS system filesystem)

include_directories(
  include 
  ${PROJECT_SOURCE_DIR}
  ${PROJECT_SOURCE_DIR}/include
  ${PROJECT_SOURCE_DIR}/include/CameraModels
  ${PROJECT_SOURCE_DIR}/Thirdparty/Sophus
  ${EIGEN3_INCLUDE_DIR}
  ${YAML_CPP_INCLUDE_DIRS}
  ${Pangolin_INCLUDE_DIRS}
  ${realsense_INCLUDE_DIR}
  ${OpenCV_INCLUDE_DIRS}
)

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib)

add_library(${PROJECT_NAME} SHARED
  src/System.cc
  src/Tracking.cc
  src/LocalMapping.cc
  src/LoopClosing.cc
  src/ORBextractor.cc
  src/ORBmatcher.cc
  src/FrameDrawer.cc
  src/Converter.cc
  src/MapPoint.cc
  src/KeyFrame.cc
  src/Atlas.cc
  src/Map.cc
  src/MapDrawer.cc
  src/Optimizer.cc
  src/Frame.cc
  src/KeyFrameDatabase.cc
  src/Sim3Solver.cc
  src/Viewer.cc
  src/ImuTypes.cc
  src/G2oTypes.cc
  src/CameraModels/Pinhole.cpp
  src/CameraModels/KannalaBrandt8.cpp
  src/OptimizableTypes.cpp
  src/MLPnPsolver.cpp
  src/GeometricTools.cc
  src/TwoViewReconstruction.cc
  src/Config.cc
  src/Settings.cc)

add_subdirectory(Thirdparty/g2o)

target_link_libraries(${PROJECT_NAME}
  ${OpenCV_LIBS}
  ${EIGEN3_LIBS}
  ${Pangolin_LIBRARIES}
  ${YAML_CPP_LIBRARIES}
  ${realsense2_LIBRARY}
  ${PROJECT_SOURCE_DIR}/Thirdparty/DBoW2/lib/libDBoW2.so
  ${PROJECT_SOURCE_DIR}/Thirdparty/g2o/lib/libg2o.so
  -lboost_serialization
  -lboost_filesystem
  -lcrypto
)

# Ivero SLAM executable
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR})
   add_executable(ivero_slam_offline_rgbd
         tools/Ivero/ivero_slam_offline_rgbd.cc)
   target_link_libraries(ivero_slam_offline_rgbd ${PROJECT_NAME})

   add_executable(ivero_slam_offline_rgbd_dual
         tools/Ivero/ivero_slam_offline_rgbd_dual.cc)
   target_link_libraries(ivero_slam_offline_rgbd_dual ${PROJECT_NAME})

   add_executable(ivero_slam_offline_stereo
         tools/Ivero/ivero_slam_offline_stereo.cc)
   target_link_libraries(ivero_slam_offline_stereo ${PROJECT_NAME})

   add_executable(ivero_slam_offline_rsbag
         tools/Ivero/ivero_slam_offline_rsbag.cc)
   target_link_libraries(ivero_slam_offline_rsbag ${PROJECT_NAME})

   add_executable(create_config_file
         tools/Ivero/create_config_file.cc)
   target_link_libraries(create_config_file ${PROJECT_NAME})